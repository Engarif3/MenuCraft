name: Test and Deploy Symfony App to EC2

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: pdo_mysql

      # Step 3: Install Composer dependencies
      - name: Install Composer Dependencies
        run: composer install --no-scripts --no-interaction --prefer-dist --dev

      # Step 4: Verify PHPStan installation and run static code analysis
      - name: Check PHPStan Installation
        run: |
          if [ -f vendor/bin/phpstan ]; then
            echo "PHPStan found!";
          else
            echo "PHPStan not found. Please check your composer.json file.";
            exit 1;
          fi

      # Step 5: Run PHPStan analysis
      - name: Run PHPStan
        run: vendor/bin/phpstan analyse

      # Step 6: Run PHPUnit tests
      - name: Run PHPUnit Tests
        run: vendor/bin/phpunit --testdox

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Configure SSH
      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # Step 3: Deploy to EC2
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          # Pull latest code on EC2
          ssh $EC2_USER@$EC2_HOST "
            if [ -d ~/symfony-app ]; then
              cd ~/symfony-app && git pull origin main;
            else
              git clone https://github.com/<your-username>/<your-repo>.git ~/symfony-app;
            fi
          "

          # Install dependencies and prepare the application
          ssh $EC2_USER@$EC2_HOST "
            cd ~/symfony-app &&
            composer install --no-dev --optimize-autoloader &&
            php bin/console doctrine:database:create --if-not-exists &&
            php bin/console doctrine:migrations:migrate --no-interaction &&
            php bin/console cache:clear --env=prod
          "

          # Restore the database from backup (if needed)
          ssh $EC2_USER@$EC2_HOST "
            mysql -u root -p restaurantManagement < ~/symfony-app/backup.sql
          "

          # Restart PHP and Nginx services
          ssh $EC2_USER@$EC2_HOST "
            sudo systemctl restart php8.2-fpm &&
            sudo systemctl restart nginx
          "
