To drop all tables and reset the database, run the following command inside the Symfony container:

symfony server:start
symfony server:start --port=8001

symfony server:stop 
symfony server:stop --all

// to enter the symfony-app container
docker exec -it symfony-app bash

php bin/console doctrine:database:drop --force

//After that, recreate the database:
php bin/console doctrine:database:create

php bin/console make:migration
php bin/console doctrine:migrations:migrate



//docker commands
docker-compose down
docker-compose down -v
docker-compose up --build


// backup.sql file 

Step 1: Export Database to .sql File Using mysqldump (also used for update the backup.sql)

mysqldump -u root -p --databases restaurantManagement > backup.sql

-u root: The MySQL user (in your case, itâ€™s root).
-p: This prompts you to enter the password (if any). If there's no password, you can omit this.
--databases restaurantManagement: The name of the database you want to export (restaurantManagement in your case).

> database_backup.sql: The output file where the .sql will be saved.

Step 2: Share the .sql File
Once you have the database_backup.sql file, anyone who clones your repository can load the database data by importing this file.

Step 3: Import the .sql File into Another Database

Anyone who wants to import your database can run the following command:
mysql -u root -p restaurantManagement < database_backup.sql